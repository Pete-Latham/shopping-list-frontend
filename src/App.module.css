/* App component styles - Mobile-First */
/* Mobile base styles */
.app {
  width: 100%;
  min-height: 100vh;
  padding: 1rem;
  margin: 0 auto;
}

.appHeader {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1.5rem;
  padding: 0 0.5rem;
}

.appHeader h1 {
  font-size: 2.2em;
  line-height: 1.2;
  margin: 0;
  background: linear-gradient(135deg, #646cff, #61dafb);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  /* Better mobile text handling */
  word-break: break-word;
}

.mainContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  flex: 1;
}

/* Mobile-first grid - single column on mobile */
.shoppingListsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
  width: 100%;
  max-width: 100%;
}

.emptyState {
  text-align: center;
  padding: 3rem 1rem;
  color: var(--mantine-color-dimmed);
  font-size: 1rem;
  line-height: 1.6;
}

.emptyState p {
  margin: 0;
  opacity: 0.8;
  max-width: 400px;
  margin: 0 auto;
}

.loading,
.error {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 200px;
  font-size: 1rem;
  padding: 1rem;
  text-align: center;
}

.error {
  color: var(--mantine-color-red-6);
}

/* Create buttons - Mobile-first */
.createButton {
  /* Mobile-friendly touch target */
  min-height: 44px;
  min-width: 120px;
  padding: 0.75rem 1.5rem;
  
  /* Styling */
  background: var(--mantine-color-blue-6);
  color: white;
  border: none;
  border-radius: 0.5rem;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  
  /* Touch feedback */
  transition: all 0.2s ease;
  -webkit-tap-highlight-color: rgba(100, 108, 255, 0.1);
}

.createButton:active {
  transform: scale(0.98);
  background: var(--mantine-color-blue-7);
}

.createButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.createButtonLarge {
  /* Mobile-friendly touch target */
  min-height: 48px;
  width: 100%;
  max-width: 300px;
  padding: 1rem 2rem;
  margin-top: 1.5rem;
  
  /* Styling */
  background: var(--mantine-color-blue-6);
  color: white;
  border: none;
  border-radius: 0.5rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  
  /* Touch feedback */
  transition: all 0.2s ease;
  -webkit-tap-highlight-color: rgba(100, 108, 255, 0.1);
}

.createButtonLarge:active {
  transform: scale(0.98);
  background: var(--mantine-color-blue-7);
}

.createButtonLarge:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Tablet styles (portrait) */
@media (min-width: 481px) {
  .app {
    padding: 1.5rem;
  }
  
  .appHeader {
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 2rem;
  }
  
  .appHeader h1 {
    font-size: 2.8em;
  }
  
  .mainContent {
    gap: 2rem;
  }
  
  .shoppingListsGrid {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    max-width: 800px;
  }
  
  .emptyState {
    padding: 4rem 2rem;
    font-size: 1.1rem;
  }
  
  .createButton {
    font-size: 1rem;
  }
}

/* Tablet landscape and small desktop */
@media (min-width: 769px) {
  .app {
    padding: 2rem;
    max-width: 1200px;
  }
  
  .appHeader h1 {
    font-size: 3.2em;
  }
  
  .shoppingListsGrid {
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    max-width: 1200px;
  }
  
  .createButton:hover {
    background: var(--mantine-color-blue-7);
    transform: translateY(-1px);
  }
  
  .createButton:active {
    transform: translateY(0);
  }
  
  .createButtonLarge:hover {
    background: var(--mantine-color-blue-7);
    transform: translateY(-1px);
  }
  
  .createButtonLarge:active {
    transform: translateY(0);
  }
}

/* Large desktop */
@media (min-width: 1201px) {
  .app {
    max-width: 1400px;
  }
  
  .shoppingListsGrid {
    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
    gap: 2rem;
  }
}

/* 
 * REDUCED MOTION SUPPORT
 * Respect user's motion preferences
 */
@media (prefers-reduced-motion: reduce) {
  .createButton,
  .createButtonLarge {
    transition: none;
  }
  
  .createButton:hover,
  .createButton:active,
  .createButtonLarge:hover,
  .createButtonLarge:active {
    transform: none;
  }
}
